using System;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media;
using System.Windows.Media.Animation;

namespace FaxLib.WPF.Controls {
    //59648 - 60138 490 entries
    public enum MoonIcon {
        None = 0,
        Home = 59648, //Increments by one for each
        Home2,
        Home3,
        Office,
        Paper,
        Pencil,
        Pencil2,
        Quill,
        Pen,
        Blog,
        Pipette,
        WaterDrop,
        PaintRoller,
        Image,
        ImageAlbum,
        Camera,
        Headset,
        Music,
        Video,
        Film,
        VideoCamera,
        Dice,
        Pacman,
        Spades,
        Clubs,
        Diamonds,
        Megaphone,
        Wifi,
        Broadcast,
        Feed,
        Mic,
        Book,
        Books,
        Bank,
        Document,
        Profile,
        File,
        Files,
        TextFile,
        ImageFile,
        MusicFile,
        MediaFile,
        VideoFile,
        ZipFile,
        Copy,
        Paste,
        Stack,
        Folder,
        FolderOpen,
        FolderAdd,
        FolderDelete,
        FolderDownload,
        FolderUpload,
        PriceTag,
        PriceTags,
        BarCode,
        QRCode,
        Ticket,
        Cart,
        DollarCoin,
        EuroCoin,
        PoundCoin,
        YenCoin,
        CreditCard,
        Calculator,
        LifeBuoy,
        Phone,
        PhoneHungUp,
        AddressBook,
        Mail,
        Pin,
        MapMarker,
        MapMarker2,
        Compass,
        Compass2,
        Map,
        Map2,
        History,
        Clock,
        Clock2,
        Alarm,
        Bell,
        StopWatch,
        Calendar,
        Printer,
        Keyboard,
        Screen,
        Laptop,
        Mobile,
        Mobile2,
        Tablet,
        TV,
        DrawerFull,
        Drawer,
        BoxAdd,
        BoxDelete,
        Download,
        Upload,
        FloppyDisk,
        Drive,
        Database,
        Undo,
        Redo,
        Undo2,
        Redo2,
        ForwardMessage,
        ReplyMessage,
        Bubble,
        Bubbles,
        Bubbles2,
        Bubble2,
        Bubbles4,
        Bubbles5,
        User,
        Users,
        UserAdd,
        UserDelete,
        UserCheck,
        UserTie,
        QuotesLeft,
        QuotesRight,
        Hourglass,
        Spinner,
        Spinner2,
        Spinner3,
        Spinner4,
        Spinner5,
        Spinner6,
        Spinner7,
        Spinner8,
        Spinner9,
        Spinner10,
        Spinner11,
        Binoculars,
        Magnifer,
        ZoomIn,
        ZoomOut,
        Expand,
        Collapse,
        Expand2,
        Collapse2,
        Key,
        Key2,
        Lock,
        LockOpen,
        Wrench,
        Equalizer,
        Equalizer2,
        Cog,
        Cogs,
        Hammer,
        Wand,
        AidKit,
        Bug,
        PieChart,
        StatsDots,
        StatsBars,
        StatsBars2,
        Trophy,
        Gift,
        WineGlass,
        CocktailGlass,
        Mug,
        Cutlery,
        Leaf,
        Rocket,
        Gauge,
        Gauge2,
        Hammer2,
        Fire,
        Lab,
        Magnet,
        Bin,
        Bin2,
        Briefcase,
        Plane,
        Truck,
        Road,
        Accessibility,
        Target,
        Security,
        Lightning,
        Power,
        PowerPlug,
        Clipboard,
        ListNumbers,
        ListSquares,
        ListDots,
        Tree,
        Menu,
        Menu2,
        Menu3,
        Menu4,
        Cloud,
        CloudDownload,
        CloudUpload,
        CloudCheck,
        Download2,
        Upload2,
        Download3,
        Upload3,
        Globe,
        Earth,
        Link,
        Flag,
        Paperclip,
        Eye,
        EyeAdd,
        EyeDelete,
        EyeBlocked,
        Bookmark,
        Bookmarks,
        Sun,
        Contrast,
        SunContrast,
        StarEmpty,
        StarHalf,
        Star,
        Heart,
        HeartBroken,
        Man,
        Woman,
        ManAndWoman,
        Happy,
        Happy2,
        Smile,
        Smile2,
        Tongue,
        Tongue2,
        Sad,
        Sad2,
        Wink,
        Wink2,
        Grin,
        Grin2,
        Cool,
        Cool2,
        Angry,
        Angry2,
        Evil,
        Evil2,
        Shocked,
        Shocked2,
        Baffled,
        Baffled2,
        Confused,
        Confused2,
        Neutral,
        Neutral2,
        Hipster,
        Hipster2,
        Wondering,
        Wondering2,
        Sleepy,
        Sleepy2,
        Frustrated,
        Frustrated2,
        Crying,
        Crying2,
        PointUp,
        PointRight,
        PointDown,
        PointLeft,
        Warning,
        Notification,
        Question,
        Add,
        Remove,
        Info,
        Cancel,
        Blocked,
        Cross,
        Check,
        Check2,
        SpellCheck,
        SignIn,
        SignOut,
        PlayCircle,
        PauseCircle,
        StopCircle,
        PrevCircle,
        NextCircle,
        BackwardCircle,
        ForwardCircle,
        Play,
        Pause,
        Stop,
        Backward,
        Forward,
        First,
        Last,
        Prev,
        Next,
        Eject,
        VolumeHigh,
        VolumeMedium,
        VolumeLow,
        VolumeOff,
        VolumeMute,
        VolumeIncrease,
        VolumeDecrease,
        Repeat,
        Repeat2,
        Infinite,
        Shuffle,
        ArrowUpLeft,
        ArrowUp,
        ArrowUpRight,
        ArrowRight,
        ArrowDownRight,
        ArrowDown,
        ArrowDownLeft,
        ArrowLeft,
        ArrowUpLeft2,
        ArrowUp2,
        ArrowUpRight2,
        ArrowRight2,
        ArrowDownRight2,
        ArrowDown2,
        ArrowDownLeft2,
        ArrowLeft2,
        CircleUp,
        CircleRight,
        CircleDown,
        CircleLeft,
        Tab,
        MoveUp,
        MoveDown,
        SortAlphaAscending,
        SortAlphaDescending,
        SortNumericAscending,
        SortNumericDescending,
        SortValueAscending,
        SortValueDescending,
        Command,
        Shift,
        Ctrl,
        Option,
        CheckboxChecked,
        CheckboxUnchecked,
        RadioChecked,
        RadioChecked2,
        RadioUnchecked,
        Crop,
        MakeGroup,
        Ungroup,
        Cut,
        Filter,
        Font,
        Typography,
        Typography2,
        TextHeight,
        TextWidth,
        FontSize,
        Bold,
        Underline,
        Italic,
        Strikethrough,
        Omega,
        Sigma,
        PageBreak,
        Superscript,
        Subscript,
        Superscript2,
        Subscript2,
        TextColor,
        PageBreaker,
        ClearFormatting,
        Table,
        Table2,
        InsertTemplate,
        Pilcrow,
        LeftPilcrow,
        RightPilcrow,
        Section,
        ParagraphLeft,
        ParagraphCenter,
        ParagraphRight,
        ParagraphJustify,
        IndentIncrease,
        IndentDecrease,
        Share,
        Newtab,
        Embed,
        Embed2,
        Console,
        Share2,
        Mail2,
        Mail3,
        Mail4,
        Mail5,
        Google,
        GooglePlus,
        GooglePlus2,
        GooglePlus3,
        GoogleDrive,
        Facebook,
        Facebook2,
        Facebook3,
        Ello,
        Instagram,
        Twitter,
        Twitter2,
        Twitter3,
        Feed2,
        Feed3,
        Feed4,
        Youtube,
        Youtube2,
        Youtube3,
        Youtube4,
        Twitch,
        Vimeo,
        Vimeo2,
        Vimeo3,
        Lanyrd,
        Flickr,
        Flickr2,
        Flickr3,
        Flickr4,
        Picassa,
        Picassa2,
        Dribble,
        Dribble2,
        Dribble3,
        Forrst,
        Forrst2,
        DeviantArt,
        DeviantArt2,
        Steam,
        Steam2,
        Dropbox,
        OneDrive,
        GitHub,
        GitHub2,
        GitHub3,
        GitHub4,
        GitHub5,
        Wordpress,
        Wordpress2,
        Joomla,
        Blogger,
        Blogger2,
        Tumblr,
        Tumblr2,
        Yahoo,
        Tux,
        Apple,
        Finder,
        Android,
        Windows,
        Windows8,
        SoundCloud,
        SoundCloud2,
        Skype,
        Reddit,
        LinkedIn,
        LinkedIn2,
        LastFm,
        LastFm2,
        Delicious,
        Stumbleupon,
        Stumbleupon2,
        Stackoverflow,
        Pinterest,
        Pinterest2,
        Xing,
        Xing2,
        Flattr,
        Foursquare,
        PayPal,
        PayPal2,
        PayPal3,
        Yelp,
        FilePdf,
        FileOpenOffice,
        FileWord,
        FileExcel,
        LibreOffice,
        Html5,
        Html5Alt,
        Css3,
        Git,
        Svg,
        Codepen,
        Chrome,
        Firefox,
        IE,
        Opera,
        Safari,
        IcoMoon,
    }

    public enum SpinDirection {
        Clockwise,
        CounterClockwise
    }

    /// <summary>
    /// Interaction logic for IcoMoon.xaml
    /// </summary>
    public partial class IcoMoon : UserControl {
        #region Dependency Properties
        public MoonIcon Icon {
            get { return (MoonIcon)GetValue(IconProperty); }
            set { SetValue(IconProperty, value); }
        }
        public static readonly DependencyProperty IconProperty = DependencyProperty.Register("Icon", typeof(MoonIcon), typeof(IcoMoon), new FrameworkPropertyMetadata(MoonIcon.None, new PropertyChangedCallback(IconProperty_Changed)));
        static void IconProperty_Changed(DependencyObject obj, DependencyPropertyChangedEventArgs e) {
            var sender = obj as IcoMoon;
            if(sender != null) {
                var icon = (int)e.NewValue;
                sender.text.Text = ((char)icon).ToString();
            }
        }

        public bool Spin {
            get { return (bool)GetValue(SpinProperty); }
            set { SetValue(SpinProperty, value); }
        }
        public static readonly DependencyProperty SpinProperty = DependencyProperty.Register("Spin", typeof(bool), typeof(IcoMoon), new FrameworkPropertyMetadata(false, new PropertyChangedCallback(SpinProperty_Changed)));
        static void SpinProperty_Changed(DependencyObject obj, DependencyPropertyChangedEventArgs e) {
            var sender = obj as IcoMoon;

            if(sender != null) {
                sender.Spin = (bool)e.NewValue;
                Update(sender);
            }
        }

        public double SpinDuration {
            get { return (double)GetValue(SpinDurationProperty); }
            set { SetValue(SpinDurationProperty, value); }
        }
        public static readonly DependencyProperty SpinDurationProperty = DependencyProperty.Register("SpinDuration", typeof(double), typeof(IcoMoon), new FrameworkPropertyMetadata(1d, new PropertyChangedCallback(SpinDurationProperty_Changed)));
        static void SpinDurationProperty_Changed(DependencyObject obj, DependencyPropertyChangedEventArgs e) {
            var sender = obj as IcoMoon;
            if(sender != null) {
                sender.SpinDuration = (double)e.NewValue;
                Update(sender);
            }
        }

        public SpinDirection SpinDirection {
            get { return (SpinDirection)GetValue(SpinDirectionProperty); }
            set { SetValue(SpinDirectionProperty, value); }
        }
        public static readonly DependencyProperty SpinDirectionProperty = DependencyProperty.Register("SpinDirection", typeof(SpinDirection), typeof(IcoMoon), new FrameworkPropertyMetadata(SpinDirection.Clockwise, new PropertyChangedCallback(SpinDirectionProperty_Changed)));
        static void SpinDirectionProperty_Changed(DependencyObject obj, DependencyPropertyChangedEventArgs e) {
            var sender = obj as IcoMoon;
            if(sender != null) {
                sender.SpinDirection = (SpinDirection)e.NewValue;
                Update(sender);
            }
        }
        #endregion

        //Dependency Updater
        static void Update(IcoMoon sender) {
            if(!sender.Spin) {
                sender.text.RenderTransform = new RotateTransform();
                sender.viewbox.Margin = new Thickness(0d);
                return;
            }

            DoubleAnimation da;
            if(sender.SpinDirection == SpinDirection.Clockwise) da = new DoubleAnimation { From = 0, To = 360, Duration = new Duration(TimeSpan.FromSeconds(sender.SpinDuration)), RepeatBehavior = RepeatBehavior.Forever };
            else da = new DoubleAnimation { From = 360, To = 0, Duration = new Duration(TimeSpan.FromSeconds(sender.SpinDuration)), RepeatBehavior = RepeatBehavior.Forever };

            var rt = new RotateTransform();
            //sender.viewbox.Margin = new Thickness(10d);
            sender.text.RenderTransform = rt;
            rt.BeginAnimation(RotateTransform.AngleProperty, da);
        }

        //Constructor
        public IcoMoon() {
            InitializeComponent();
        }
    }
}
